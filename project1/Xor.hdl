// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/1/Xor.hdl
/**
 * Exclusive-or gate:
 * if ((a and Not(b)) or (Not(a) and b)) out = 1, else out = 0
 */
CHIP Xor {
    IN a, b;
    OUT out;

    PARTS:
    Not(in=b, out=notb);
    And(a=a, b=notb, out=c);
    Not(in=a, out=nota);
    And(a=nota, b=b, out=d);
    Or(a=c, b=d, out=out);

    // Alternative
    // How?
    // Implement naive solution above with NAND gates only
    // Use DeMorgan's laws to simplify
    // Not(in=a, out=nota);
    // Not(in=b, out=notb);
    // Or(a=a, b=notb, out=aOrnotb);
    // Or(a=nota, b=b, out=notaOrb);
    // And(a=aOrnotb, b=notaOrb, out=out);
}
